c
params[:charge]
exit
[*(@reservation.start..@reservation.end)]
[*(@reservation.start..@reservation.end)][0].class
[*(@reservation.start..@reservation.end)]
[(@reservation.start..@reservation.end)]
(@reservation.start..@reservation.end)
@reservation.end
(@reservation.start..@reservation.end).count
@reservation.start
c
@listing.user
@reservation = @listing.reservations.new(user_id: current_user.id, start: Date.parse(params[:start]), end: Date.parse(params[:end]))
@listing = Listing.find(params[:listing_id])
exit
params
exit
a
a = reservation_params.merge!(key: "bar")
reservation_params
reservation_params.merge!(key: "bar")
reservation_params
reservation_params.merge!(key: "bar")
reservation_params
exit
reservation_params
reservation_params = reservation_params.merge!(key: "bar")
reservation_params
exit
reservation_params
reservation_params = reservation_params.merge!(key: "bar")
reservation_params
reservation_params.merge!(key: "bar")
reservation_params
reservation_params[:reservation_id] = @listing.id
reservation_params
exit
params
@start
exit
@start
reservation_pararms
params
exit
params
exit
@start
exit
params[:start]
params
reservation_params
exit
reservation_params
exit
Reservation.last
@reservation
Reservation
@reservation.id
exit
params
@reservation
c
@reservation
exit
@reservation
c
@reservation
exit
@reservation
params[:reservation_id]
self
params
exit
@reservation
exit
@reservation
c
@listing
@reservation
c
@listing.user
c
exit
ReservationMailer.booking_emailhost(@reservation.user, @listing.user, @reservation.id, @reservation.start.strftime("%d %b %Y"), @reservation.end.strftime("%d %b %Y")).deliver_later
exit
@listing.user
@reservation.user
exit
@reservation.start.strftime("%d %b %Y")
@reservation.start.strftime("Printed on %m/%d/%Y")
@reservation.start.to_s
@reservation.start.string
@reservation.start
exit
args[1]
args.last
args.first
args.count
@reservation
@reservation.user
args
exit
customer.last_name
customer.first_name
customer
exit
@reservation
exit
eit
customer
c
gon.endDates
gon.startDates
c
@endDates.reverse
[4,5,2,4,6,1].reverse
@endDates.sort
[4,5,2,4,6,1].sort
@endDates[0].class
exit[0]
exi
@reservations
exit
@reservation
@reservations
c
@listing.reservations
exit
@listing.reservations
@listing.reservations.last.destroy
@listing.reservations.last
@listing.reservations
@reservations
c
@reservations.flatten
@reservations
c
@reservations
exit
@reservations
c
@listing.reservations.respond_to? :each
@listing.respond_to? :each
def iterable?(object)
c
exit
@listing.reservations.count
c
reservations
c
reservations
c
exit
reservations
c
reservations << [*(reservation.start..reservation.end)]
reservations
[*(reservation.start..reservation.end)]
reservation.start
reservation
c
@reservation
exit
Date.parse("8 September, 16").class == Date
Date.parse("8 September, 16").class.class
Date.parse("8 September, 16").class
Date.parse(reservation_params[:start])
Date.parse("8 September, 16").class
Date.parse("8 September, 16")
@reservation
@reservation.update(start: Date.parse("8 September, 16"))
@reservation
@reservation.update(start: "asd")
@reservation = @listing.reservations.build(reservation_params)
@listing = Listing.find(params[:listing_id])
@reservation = @listing.reservations.build(reservation_params)
Date.parse("8 September, 16")
Date.parse(reservation_params[:start])
reservation_params[:start].date
reservation_params[:start].class
reservation_params[:start]
reservation_params
exit
params[:listing_id]
params
exit
params
exit
reservation_params
params
exit
params
exit
params
parmas
exit
reservation_params
self
this
params
exit
params
exit
params
exit
params
exit
@listing.listingphotos[0].image.url(:indexdisplay)
@listing.listingphotos[0].image.url
@listing.listingphotos[0]
@listing.listingphotos
@listing
exit
photos.count
photos.class
photos
exit
@listing.listing_photos.first.class
@listing.listing_photos.class
@listing.listing_photos.first
@listing.listing_photos.count
@listing.listing_photos
@listing.listings_photos
@listing.save
@listing.valid?
n
@listing.valid?
c
params
c
n
c
listing_params
c
listing_params
listing_parans
c
params[:listing][:listing_photos]
params[:listing]
exit
@listing
n
params[:listing][:listing_photos_cache]
params[:listing][:listing_photos]
params[:listing]
c
@listing.save
@listing
n
c
params[:listing][:listing_photos_cache]
params[:listing]
params
listing_params[:listing_photos_cache]
@listing = current_user.listings.build(listing_params)
