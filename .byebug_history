c
exit
Listing.all.last.keyword_description_list
Listing.all.last
Listing.all.first.tags_on
Listing.all.first.tags
Listing.all.first
Listing.all
Listing.searchh("big", "No")
@listing.pet_presence_list
@listing.keyword_description_list
@listing.pet_presence_list
Listing.searchh("big", "No")
Listing.last
Listing.all
@listing.pet_presence_list
@listing.keyword_description_list
exit
Listing.searchh("big and beautiful", "No")
Listing.last
c
dListing.tagged_with("No", :on => :pet_presence, :any => true)
d Listing.tagged_with("No", :on => :pet_presence, :any => true)
Listing.tagged_with("No", :on => :pet_presence, :any => true)e
Listing.tagged_with("big", :on => :keyword_description, :any => true)
Listing.tagged_with(["big"], :on => :keyword_description, :any => true)
@listing.id
@listing.keyword_description_list
@listing
Listing.tagged_with(search.split(" "), :on => :keyword_description, :any => true).tagged_with(pet_presence, :on => :pet_presence, :any => true)
Listing.tagged_with("big", :on => :keyword_description, :any => true)
Listing.all
Listing
Listing.tagged_with("big", :on => :keyword_description, :any => true)
Listing.tagged_with(search.split(" "), :on => :keyword_description, :any => true)
search.split(" ")
Listing.tagged_with(search.split(" "), :on => :keyword_description, :any => true).tagged_with(pet_presence, :on => :pet_presence, :any => true)
@listing
Listing.tagged_with(search.split(" "), :on => :keyword_description, :any => true).tagged_with(pet_presence, :on => :pet_presence, :any => true)
pet_presence = "No"
search = "big"
Listing.tagged_with(search.split(" "), :on => :keyword_description, :any => true).tagged_with(pet_presence, :on => :pet_presence, :any => true)
@listing.keyword_description_list
@listing.pet_presence_list
exit
Listing.searchh("bigg", "No")
Listing.searchh("big", "No")
@listing.pet_presence_list
c
Listing.tagged_with("big".split(" "), :on => :keyword_description, :any => true).tagged_with(nil, :on => :pet_presence, :any => true)
params
Listing.tagged_with("big".split(" "), :on => :keyword_description, :any => true)
Listing.searchh("big", "")
@listing.pet_presence_list
@listing.keyword_description_list
@listing.tags_on
@listing.tags
@listing
exit
Listing.searchh("big", false)
Listing.searchh("big", true)
@listing
@listing.pet_presence_list.add(true)
Listing.searchh("big", "yes")
(Listing.searchh("biggg", "yes")
exit
@hashs[:"3"]
@hashs[:3]
@hashs
exit
Listing.find(2).reservations.pluck(:start, :end)
@hashs
hashs
c
exit
a.first.methods
a.first
a.first.merge!(popo)
popo = a.first.reservations.pluck(:start, :end).flatten
a.first.reservations.pluck(:start, :end).flatten
a.first.reservations.pluck(:start, :end)
a.first.reservations
a.first.to_a
a.first << 1
a.first.class
a.first
a
a = @listings.to_a
@listings.first << 1
@listings.first.class
@listings.first
@listings.class
@listings.count
@listings
c
params
c
params
c
v
params[:query]
params
exit
@listings = Listing.search(params[:query], suggest: true)
params[:query]
exit
(Listing.search params[:query], autocomplete: false).map(&:title)
params[:query]
params
exit
params[:search][:query]
params[:search]
exit
params[:search].values.include? ""
params[:search].values
params
exit
(array.flatten & [a,d]).empty?
array.flatten & [a,d].empty?
array.flatten & [a,d]
array.flatten
c
array.flatten
array.flatten & [a, d]
[a, d]
((array.flatten.include? a) || (array.flatten.include? d))
(array.flatten.include? a || array.flatten.include? d)
d
a
exit
c
a
exit
(array.flatten.include? a || array.flatten.include? p b)
(array.flatten.include? a || array.flatten.include? b)
p b
a
b
array.flatten.include? a || b
array.flatten.include? (a, b)
array.flatten.include? (a || b)
 array.flatten.include? (a || b)
array.flatten.include? a
array.flatten.include? b
 array.flatten.include? (a || b)
array.flatten.include? b
array.flatten.include? a
!( array.flatten.include? (a || b))
c
@final_relevant
b = Date.parse(params[:search][:bookingenddate])
a = Date.parse(params[:search][:bookingstartdate])
( array.flatten.include? Date.parse(params[:search][:bookingenddate]) )
( array.flatten.include? (Date.parse(params[:search][:bookingstartdate]) || Date.parse(params[:search][:bookingenddate])) )
( array.flatten.include? Date.parse(params[:search][:bookingstartdate]) || Date.parse(params[:search][:bookingenddate]) )
array.flatten.include? Date.parse(params[:search][:bookingenddate])
array.flatten.include? params[:search][:bookingenddate]
array
listing.reservations.pluck(:start, :end)
listing.reservations
array.flatten
!( array.flatten.include? (Date.parse(params[:search][:bookingstartdate]) || Date.parse(params[:search][:bookingenddate])) )
c
!( array.flatten.include? (Date.parse(params[:search][:bookingstartdate]) || Date.parse(params[:search][:bookingenddate])) )
@final_relevant
exit
array.flatten.include? Date.parse(params[:search][:bookingenddate])
Date.parse(params[:search][:bookingenddate])
params[:search][:bookingenddate].class
array.flatten[0].class
array.flatten.include? params[:search][:bookingenddate]
params[:search][:bookingenddate]
params[:search][:bookingstartdate]
array.flatten
array.flatten.include? (params[:search][:bookingstartdate] || params[:search][:bookingenddate])
array
c
params[:search][:bookingenddate]
params[:search][:bookingstartdate]
array.flatten.include? (params[:search][:bookingstartdate] || params[:search][:bookingenddate])
listing.reservations
array
c
@relevant_location.to_a
@relevant_location
@relevant_location.map(:&address)
@relevant_location.first
@relevant_location.last
@relevant_location.first
@relevant_location.count
@relevant_location
exit
results = Listing.search("London")
results = Listing.search("London", fields: [:address])
results = Listing.search("London")
results = Product.search("London")
Listing.search "London"
Listing.all.pluck("address")
Listing.search(params[:search][:location], fields: [:address])
Listing.search(params[:search][:location])
Listing.search(params[:search][:location], fields: [:address])
Listing.search(params[:search][:location])
Listing.search params[:search][:location]
params[:search][:location]
@relevant_location
exit
params[:search]
params_search
Listing
params
c
params[:charge]
exit
[*(@reservation.start..@reservation.end)]
[*(@reservation.start..@reservation.end)][0].class
[*(@reservation.start..@reservation.end)]
[(@reservation.start..@reservation.end)]
(@reservation.start..@reservation.end)
@reservation.end
(@reservation.start..@reservation.end).count
@reservation.start
c
@listing.user
@reservation = @listing.reservations.new(user_id: current_user.id, start: Date.parse(params[:start]), end: Date.parse(params[:end]))
@listing = Listing.find(params[:listing_id])
exit
params
exit
a
a = reservation_params.merge!(key: "bar")
reservation_params
reservation_params.merge!(key: "bar")
reservation_params
reservation_params.merge!(key: "bar")
reservation_params
exit
reservation_params
reservation_params = reservation_params.merge!(key: "bar")
reservation_params
exit
reservation_params
reservation_params = reservation_params.merge!(key: "bar")
reservation_params
reservation_params.merge!(key: "bar")
reservation_params
reservation_params[:reservation_id] = @listing.id
reservation_params
exit
params
@start
exit
@start
reservation_pararms
params
exit
params
